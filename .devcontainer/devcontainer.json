// For format details, see https://aka.ms/devcontainer.json. For config options, see the README at:
// https://github.com/microsoft/vscode-dev-containers/tree/v0.217.4/containers/docker-existing-docker-compose
// If you want to run as a non-root user in the container, see .devcontainer/docker-compose.yml.
{
	"name": "Existing Docker Compose (Extend)",
	// Update the 'dockerComposeFile' list if you have more compose files or use different names.
	// The .devcontainer/docker-compose.yml file contains any overrides you need/want to make.
	"dockerComposeFile": [
		"./docker-compose.yaml"
	],
	// The 'service' property is the name of the service for the container that VS Code should
	// use. Update this value and .devcontainer/docker-compose.yml to the real service name.
	"service": "develop",
	// The optional 'workspaceFolder' property is the path VS Code should open by default when
	// connected. This is typically a file mount in .devcontainer/docker-compose.yml
	"workspaceFolder": "/workspace/discord-bot",
	// Set *default* container specific settings.json values on container create.
	"settings": {
		"python.analysis.extraPaths": [
			".venv/lib/python3.8/site-packages",
			"./src",
		],
		"python.autoComplete.extraPaths": [
			".venv/lib/python3.8/site-packages",
			"./src",
		],
		"files.autoSave": "off",
		"files.autoSaveDelay": 1000,
		"python.linting.lintOnSave": true,
		"python.linting.pylintEnabled": false,
		"python.linting.pycodestyleEnabled": false,
		"python.linting.flake8Enabled": true,
		"python.linting.flake8Args": [
			"--config",
			".flake8"
		],
		"python.formatting.provider": "autopep8",
		"python.formatting.autopep8Args": [
			"--aggressive",
		],
		"editor.formatOnSave": true,
		"python.testing.pytestPath": ".venv/bin/pytest",
		"python.testing.pytestEnabled": true,
		"python.defaultInterpreterPath": ".venv/bin/python",
		"python.testing.autoTestDiscoverOnSaveEnabled": true,
		// Add pytest runtime argument settings
		// --cov: Enable coverage measurement
		// --cov-report xml: Output coverage measurement report in xml format (coverage.xml)
		"python.testing.pytestArgs": [
			"--cov=.",
			"--cov-report",
			"xml",
			"-vv",
			"-m",
			"not medium_test"
		],
		// Coverage display setting on the editor
		// show coverage in gutter (where breakpoints, etc. are displayed)
		"coverage-gutters.showGutterCoverage": false,
		// show coverage on editor line or not
		"coverage-gutters.showLineCoverage": true,
		// Coverage is displayed in the ruler or not
		"coverage-gutters.showRulerCoverage": true,
	},
	// Add the IDs of extensions you want installed when the container is created.
	"extensions": [
		"donjayamanne.python-extension-pack",
		"littlefoxteam.vscode-python-test-adapter",
		"esbenp.prettier-vscode",
		"yzhang.markdown-all-in-one",
		"shd101wyy.markdown-preview-enhanced",
		"fcrespo82.markdown-table-formatter",
		"csholmq.excel-to-markdown-table",
		"chunsen.bracket-select",
		"wmaurer.change-case",
		"ryanluker.vscode-coverage-gutters",
		"ms-azuretools.vscode-docker",
		"donjayamanne.githistory",
		"eamodio.gitlens",
		"mhutchie.git-graph",
		"waderyan.gitblame",
		"bibhasdn.unique-lines",
		"xyz.local-history",
		"streetsidesoftware.code-spell-checker"
	],
	// Use 'forwardPorts' to make a list of ports inside the container available locally.
	// "forwardPorts": [],
	// Uncomment the next line if you want start specific services in your Docker Compose config.
	"runServices": [
		"develop"
	],
	// Uncomment the next line if you want to keep your containers running after VS Code shuts down.
	// "shutdownAction": "none",
	// Uncomment the next line to run commands after the container is created - for example installing curl.
	// "postCreateCommand": "apt-get update && apt-get install -y curl",
	// Uncomment to connect as a non-root user if you've added one. See https://aka.ms/vscode-remote/containers/non-root.
	"remoteUser": "developer",
	"remoteEnv": {
		"WORKSPACE": "${localWorkspaceFolder}/.."
	}
}
